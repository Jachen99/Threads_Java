1、线程的通信机制是什么？
SE阶段：
    wait(【时间】)：等待
    notify()/notifyAll()：唤醒、通知
        notify()：唤醒1个
        notifyAll()：唤醒所有
这些方法的使用也称为等待唤醒机制。

2、什么情况下会用到上面的方法？
在解决生产者与消费者问题时会用到上面的方法。
生产者：给缓冲区增加数据
消费者：从缓冲区取、消耗数据

生产者与消费者问题：
    当多个线程共享数据缓冲区，
    并且其中一些线程往里“增加”数据，这些线程称为生产者线程，
    另一个线程从缓冲区“取”数据，这些线程称为消费者线程，
    如果当缓冲区空的时候，消费者线程只能“等待”，
    等到生产者“生产”了数据之后，再“唤醒、通知”消费者线程；
    同理，缓冲区如果有大小限制，当缓冲区满的时候，
    生产者线程也要“等待”，
    等到消费者“消费”了数据之后，再“唤醒、通知”生产者线程。


生产者与消费者问题中有哪些多线程问题：
（1）线程安全问题 ==> 同步
（2）等待唤醒问题 ==> 通信wait,notify
    wait,notity,notifyAll方法都必须由“同步锁”对象调用，
    否则会发生IllegalMonitorStateException

3、演示
陈前觉得学Java太难了，放弃了，但是看到尚硅谷学生很多，就租了小门脸，
开始卖快餐。陈前和他女朋友一起创业。
小门脸一开始比较小，工作台上只能放5份菜。
